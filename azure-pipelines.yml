# Pipeline
trigger: none
    # branches:
    #     include:
    #         - '*'

pool:
  #vmImage: 'ubuntu-latest'
  name: custom
  #  vm: 'ubuntu-latest'

variables:
    MYVAR: "hello"
stages:
- stage: Tryout
  displayName: 'Try out ado'
  variables:
    STAGE_VAR: $(UI_VAR_NOSECRET)
    SECRET_VAR: '$(UI_VAR_SEC)'
  jobs:
  - job: printscript
    steps:
    - bash: |
        #!/bin/bash
        set -x
        ls
        whoami
        hostname
        env
        # echo $PATH
        # echo '$(MYVAR)'
        # echo $MYVAR
        # echo '$(STAGE_VAR)'
        # echo $STAGE_VAR
        # echo $UI
        # echo '$(UI_VAR_SEC)'
        # bash "echo '$(UI_VAR_NOSECRET)'"
        # echo $SHELL
        echo "$STAGE_VAR"
        echo "$(UI_VAR_NOSECRET)"
        
      env:
        UI: '$(UI_VAR_SEC)'
- stage: tf
  jobs:
  - job: tfcmds
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.3.0'
    - task: TerraformCLI@0
      inputs:
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        allowTelemetryCollection: true
# - task: TerraformCLI@0
  # inputs:
  #   command: 'init'
  #   workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  #   backendType: 'azurerm'
  #   backendServiceArm: 'storageAcc'
  #   backendAzureRmSubscriptionId: 'b00e9e00-4924-464f-929d-7c28ccf1a449'
  #   ensureBackend: true
  #   backendAzureRmResourceGroupName: 'ado-rg'
  #   backendAzureRmResourceGroupLocation: 'centralindia'
  #   backendAzureRmStorageAccountName: 'adosto'
  #   backendAzureRmContainerName: 'blah'
  #   backendAzureRmKey: 'key'
  #   allowTelemetryCollection: true
    
    
        
        